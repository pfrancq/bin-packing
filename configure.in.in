#MIN_CONFIG(3.0.0)

AM_INIT_AUTOMAKE(rbp, 1)
AC_PROG_CXX
AC_C_BIGENDIAN



#--------------------- R LIB -----------------------------
#VARIABLES USE :
#	$R_LIB environnement variable used for developpment
#	$R_INC_PATH = the path specified in the --with-r-includes
#	$R_LIB_PATH = the path specified in the --with-r-libs
#	$R_INC_DIR = the directory where the includes were found
#	$R_LIB_DIR = the directory where the libraries were found
#	$KGALILEICENTER_ADD = the library needed by KGALILEICENTER_LDADD

#---------------------------------------------------------
# ---- add configure option : --with-r-includes=DIR ----
if test "x$R_LIB" != "x" ; then
	R_INC_PATH=$R_LIB
else
	R_INC_PATH=" /usr/include /usr/include/r /usr/local /usr/local/include /usr/local/include/r ${prefix}/include/r"
fi
AC_ARG_WITH(r-includes,
	AC_HELP_STRING(
		[--with-r-includes=DIR],
		[where the R includes are, like [/usr/include/r]. ]),
	R_INC_PATH="$withval")


# ---- add configure option : --with-r-libs=DIR ----
if test "x$R_LIB" != "x" ; then
	R_LIB_PATH=$R_LIB
else
	R_LIB_PATH="/usr/lib /usr/lib/r /usr/local/lib /usr/local/lib/r ${prefix}/lib/r"
fi
AC_ARG_WITH(r-libs,
	AC_HELP_STRING(
		[--with-r-libs=DIR],
		[where the R libraries are installed, like [/usr/lib]. ]),
	R_LIB_PATH="$withval")


# ---- end arg for configure ----

# ---- end arg for configure ----

# ---- def function to check for a specific R library on the system
AC_DEFUN(R_LIB_CHK,[
	str="$1/lib$2.*"
	R_LIB_DIR=""
	for j in `echo $str`; do
		if test -r $j; then
		R_LIB_DIR=$1
		break 2
	fi
	done
])
# --- end def function -----


# ---- def function to check for a specific R includes on the system
AC_DEFUN(R_INC_CHK,[
	R_INC_DIR=""
	str="$1/$2"
	for i in $R_INC_PATH ; do
		test -f $i/$str                    && R_INC_DIR=$i/$1 && break
		#test -f $i/r/$str              && R_INC_DIR=$i/r/$1 && break
	done
	AC_MSG_CHECKING(for $1/$2)
	if test -z "$R_INC_DIR"; then
		if test "x$R_INC_PATH" != "x"; then
			AC_MSG_RESULT(no)
			AC_MSG_ERROR(Cannot find $1 header files under $R_INC_PATH)
		else
			AC_MSG_RESULT(no)
			AC_MSG_ERROR(Cannot find $2 headers.  Use --with-r-includes= to specify non-default path.)
		fi
	fi
	AC_MSG_RESULT(yes in $R_INC_DIR)

	if test "x$i" != "x$PAST_R_INC_DIR"; then
		CPPFLAGS="-I$i $CPPFLAGS"
	fi
	PAST_R_INC_DIR="$i"

])
# --- end def function -----

# ---- check the presence of the includes for all the R libraries
R_INC_CHK(rdb,rmysql.h)
R_INC_CHK(rga,rga.h)
R_INC_CHK(rga2d,rga2d.h)
R_INC_CHK(rgga,rgga.h)
R_INC_CHK(rmath,rgraph.h)
R_INC_CHK(rprg,rprg.h)
R_INC_CHK(rpromethee,rpromethee.h)
R_INC_CHK(rstd,rcontainer.h)


# ---- check the presence of all R libraries
for l in rdb rga rga2d rgga rmath rprg rpromethee rstd; do

	#AC_MSG_CHECKING(for lib$l)
	for i in $R_LIB_PATH ; do
		R_LIB_CHK($i/$l,$l)  #check for local presence
		R_LIB_CHK($i,$l)
		R_LIB_CHK($i/r,$l)
	done
	AC_MSG_CHECKING(for lib$l)
	if test -z "$R_LIB_DIR"; then
		AC_MSG_RESULT(no)
		AC_MSG_ERROR(Cannot find lib$l)
	else
		AC_MSG_RESULT(yes in $R_LIB_DIR)
	fi
	if test "x$R_LIB_DIR" != "x$PAST_R_LIB_DIR"; then
		LDFLAGS="-L$R_LIB_DIR $LDFLAGS"
	fi
	PAST_R_LIB_DIR="$R_LIB_DIR"
	KGALILEICENTER_ADD="$R_LIB_DIR/lib$l.la $KGALILEICENTER_ADD"

done

#--------------------- END R LIB -----------------------------



# add argument : --with-mysql
# ----------------------------
AC_ARG_WITH(mysql,
	AC_HELP_STRING(
		[--with-mysql],
		[MySQL include directory [[/usr/include/mysql]]]),
	[MYSQL_DIR=$withval],
	[MYSQL_DIR="/usr"])



# ----- check for libmysqlclient.la on the system ------
AC_DEFUN(MYSQL_LIB_CHK,[
	str="$1/libmysqlclient.*"
	for j in `echo $str`; do
		if test -r $j; then
		MYSQL_LIB_DIR=$1
		break 2
	fi
	done
])

# Determine MySQL installation paths /usr/include /usr/include/mysql
for i in $MYSQL_DIR  /usr/include /usr/include/mysql /usr/local /usr/local/mysql; do
   test -f $i/mysql.h                    && MYSQL_INC_DIR=$i/
   test -f $i/mysql/mysql.h              && MYSQL_INC_DIR=$i/mysql
   test -f $i/include/mysql/mysql.h              && MYSQL_INC_DIR=$i/include/mysql
done

if test -z "$MYSQL_INC_DIR"; then
  if test "x$MYSQL_DIR" != "x"; then
    AC_MSG_ERROR(Cannot find clientMySQL header files under $MYSQL_DIR)
  else
    AC_MSG_ERROR(Cannot find clientMySQL headers.  Use --with-mysql= to specify non-default path.)
  fi
fi

for i in $MYSQL_DIR  /usr/local /usr/local/mysql; do
   MYSQL_LIB_CHK($i/lib)
   MYSQL_LIB_CHK($i/lib/mysql)
done

LDFLAGS="-L$MYSQL_LIB_DIR $LDFLAGS"
CXXFLAGS="-I$MYSQL_INC_DIR $CXXFLAGS"

AC_CHECK_LIB(mysqlclient, mysql_init, LIBS="-lmysqlclient $LIBS",
	AC_MSG_ERROR([clientMySQL libraries not found.]))
AC_CHECK_LIB(mysqlclient, mysql_thread_init, [],
	AC_DEFINE(OLD_MYSQL, 1, [Old MySQL version]))

# ----- end of check for libmysqlclient.la on the system ------



CXXFLAGS="$CXXFLAGS $USE_EXCEPTIONS"


